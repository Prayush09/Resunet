generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String?
  name          String
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  resumes       Resume[]
  
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Resume {
  id            String   @id @default(uuid())
  userId        String
  title         String
  summary       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User     @relation(fields: [userId], references: [id])
  sections      Section[]
  skills        Skill[]
}

model Section {
  id            String   @id @default(uuid())
  resumeId      String
  type          SectionType
  content       String
  order         Int

  resume        Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
}

model Skill {
  id            String   @id @default(uuid())
  resumeId      String
  name          String
  proficiency   Int // From 0 to 100

  resume        Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
}

enum SectionType {
  EDUCATION
  EXPERIENCE
  SKILLS
  PROJECTS
  CERTIFICATIONS
  CUSTOM
}

